{"version":3,"sources":["logo.svg","context/MapContext.js","context/QuestionnaireContext.js","hooks/useQuestions.js","hooks/useLayerUtilities.js","hooks/useLayerColors.js","hooks/useLayerStyles.js","context/LayerContext.js","components/MapKeyboardEventHandler.js","components/map/Map.js","components/FileUploader.js","components/aria-components/Button.js","components/controls/Controls.js","components/color/DualColorLabel.js","components/room-information/RoomInformation.js","components/options/colors/OptionColors.js","components/options/legend/OptionLegend.js","components/aria-components/Switch.js","components/options/patterns/OptionPattern.js","components/options/fonts/OptionFonts.js","components/options/Options.js","components/Questions.js","components/Questionnaire.js","components/aria-components/table/Table.js","components/KeyboardShortcuts.js","components/shortcuts/Shortcuts.js","components/title/Title.js","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["MapContext","createContext","MapProvider","props","useState","mapPanZoom","setMapPanZoom","process","svgPath","setSvgPath","rootFocus","useRef","patterns","setPatterns","mapTitle","setMapTitle","Provider","value","focusRoot","current","focus","children","QuestionnaireContext","QuestionnaireProvider","orginalResponses","question","response","editableResponse","setEditableResponse","commitedResponse","setCommitedResponse","LOCAL_STORAGE_KEY","useEffect","initialResponse","pullResponseLocalStorage","clonedIntitialResponseEditable","map","foo","clonedIntitialResponseCommited","localStorage","JSON","parse","getItem","err","console","error","pushResponseLocalStorage","setItem","stringify","makeEdits","i","j","commitEdits","clonedEditableResponse","resetEdits","clonedCommitedResponse","useQuestions","questionnaireBitField","useMemo","acm","counter","length","calculateBitField","layerClassTranslator","obstacle","fullName","gradientKey","icon","tactile","entry","stairs","lift","toilet","unlisted","inactive","passage","useLayerUtilities","getTranslation","key","getClassKeys","Object","keys","getLayerClassIterator","callback","entries","forEach","useLayerColors","layerColorIndexMap","originalColorPalette","layerColors","setLayerColors","colorPalette","setColorPallete","generateLayerColorsFromPalette","palette","_layerColors","primary","secondary","_addColorToPaletteAndIndex","colorType","color","_layerStyle","_colorPalette","includes","Error","colorIndex","findIndex","push","resetColorPalette","pullLayerStylesFromSVG","svgEl","_layerColorIndexMap","_colorIndex","gradientEl","getElementById","primaryColorStop","querySelector","secondaryColorStop","primaryColor","getAttribute","secondaryColor","pushLayerStylesToSVG","colorStops","querySelectorAll","setAttribute","layerFontFamilies","layerFontWeights","useLayerStyles","selectedFontFamily","setSelectedFontFamily","selectedFontWeight","setSelectedFontWeight","LayerContext","LayerProvider","label","description","class","layerInfo","setLayerInfo","layerStyleSheet","MapKeyboardEventHandler","handleFocusableElements","handleKeys","onKeyEvent","zoomIn","zoomOut","fit","center","panBy","x","y","svgPanZoom","require","Map","className","rootGroupEl","useContext","iterateLayers","layer","updateLayer","updatePatterns","makeStyles","theme","font","fontFamily","typography","fontWeight","useStyles","dataset","layerPattern","onLayerFocus","e","target","roomLabelledBy","layerBitField","roomDescribedBy","roomTitle","roomDesc","textContent","classList","onLayerBlur","layerState","parseInt","contains","tabIndex","isActive","src","onError","onLoad","zoomEnabled","dblClickZoomEnabled","preventMouseEventsDefault","zoomAtPoint","addEventListener","innerRef","FileUploader","type","name","onChange","event","files","reader","FileReader","onload","result","readAsDataURL","Button","ref","buttonProps","useButton","Controls","log","onPress","ArrowBack","ArrowUpward","ArrowDownward","ArrowForward","Add","Remove","RotateLeft","DualColorLabel","left","right","edgeWidth","classes","borderLeft","borderRight","RoomInformation","iconColor","header","OptionColors","colorChangeTimeout","clearTimeout","setTimeout","bar","variant","onClick","OptionLegend","Switch","state","useToggleState","React","inputProps","useSwitch","useFocusRing","isFocusVisible","focusProps","width","height","style","marginRight","rx","fill","isSelected","cx","cy","r","stroke","strokeWidth","OptionPattern","OptionFonts","selected","weight","Options","Divider","questionRow","display","fontSize","flexDirection","justifyContent","paddingTop","paddingBottom","paddingLeft","paddingRight","RadioContext","RadioGroup","useRadioGroupState","useRadioGroup","radioGroupProps","labelProps","Radio","useRadio","Questions","onRadioChange","appBar","position","backgroundColor","title","marginLeft","spacing","flex","button","marginTop","marginBottom","card","alignSelf","Transition","forwardRef","Slide","direction","Questionnaire","open","setOpen","handleClickOpen","handleClose","fullWidth","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","Typography","autoFocus","Card","sx","CardHeader","CardContent","TableRowGroup","Element","rowGroupProps","useTableRowGroup","TableHeaderRow","item","rowProps","useTableHeaderRow","node","TableColumnHeader","column","columnHeaderProps","useTableColumnHeader","arrowIcon","sortDescriptor","mergeProps","colSpan","colspan","textAlign","padding","outline","cursor","rendered","allowsSorting","visibility","TableRow","selectionManager","useTableRow","background","index","TableCell","cell","gridCellProps","useTableCell","TableCheckboxCell","checkboxProps","useTableSelectionCheckbox","parentKey","inputRef","useCheckbox","TableSelectAllCell","selectionMode","useTableSelectAllCheckbox","Table","useTableState","showSelectionCheckboxes","collection","gridProps","useTable","borderCollapse","borderBottom","headerRows","headerRow","childNodes","isSelectionCell","body","row","cardContent","alignItems","Key","boxShadow","borderRadius","minWidth","KeyboardShortcuts","category","shortcut","Shortcuts","Title","Dashboard","THEME","createTheme","fontWeightLight","fontWeightRegular","fontWeightMedium","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document"],"mappings":"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","file":"static/js/main.afc7ee00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext, useState, useRef } from \"react\";\r\n\r\n//create a context, with createContext api\r\nexport const MapContext = createContext();\r\n\r\nconst MapProvider = (props) => {\r\n  // this state will be shared with all components\r\n  const [mapPanZoom, setMapPanZoom] = useState();\r\n  const [svgPath, setSvgPath] = useState(\r\n    `${process.env.PUBLIC_URL}/svg/campus_map_prototype--demo.svg`\r\n  );\r\n  // TODO Move some state variables to LayerContext\r\n  const rootFocus = useRef(null);\r\n  const [patterns, setPatterns] = useState(false);\r\n\r\n  const [mapTitle, setMapTitle] = useState(\"No map selected!\");\r\n\r\n  const focusRoot = () => {\r\n    if (rootFocus.current) {\r\n      rootFocus.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapContext.Provider\r\n      value={{\r\n        mapPanZoom,\r\n        setMapPanZoom,\r\n        rootFocus,\r\n        focusRoot,\r\n        svgPath,\r\n        setSvgPath,\r\n        patterns,\r\n        setPatterns,\r\n        mapTitle,\r\n        setMapTitle,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MapContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MapProvider;\r\n","import { createContext, useState, useMemo } from \"react\";\r\nimport useQuestions from \"../hooks/useQuestions\";\r\n\r\n//create a context, with createContext api\r\nexport const QuestionnaireContext = createContext();\r\n\r\nconst QuestionnaireProvider = (props) => {\r\n  const {\r\n    editableResponse,\r\n    commitedResponse,\r\n    makeEdits,\r\n    commitEdits,\r\n    resetEdits,\r\n  } = useQuestions();\r\n\r\n  const calculateBitField = (response) => {\r\n    if (response) {\r\n      // acm => Accumulator\r\n      let acm = 0;\r\n      // Binary number would be {question 7 response}{question 6 response}...{question 1 response}\r\n      // 000000001 & 10000000 = 0 = 0\r\n      // 1101 & 1000000101 = 0101 = 5\r\n      // 13 & 69 = 5\r\n      let counter = 0;\r\n      while (counter < response.length) {\r\n        let responseNumber = response[counter].response == \"yes\" ? 1 : 0;\r\n        acm += responseNumber * 2 ** counter;\r\n        counter++;\r\n      }\r\n      return acm;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const questionnaireBitField = useMemo(\r\n    () => (commitedResponse ? calculateBitField(commitedResponse) : 0),\r\n    [commitedResponse]\r\n  );\r\n\r\n  return (\r\n    <QuestionnaireContext.Provider\r\n      value={{\r\n        editableResponse,\r\n        commitedResponse,\r\n        makeEdits,\r\n        commitEdits,\r\n        resetEdits,\r\n        questionnaireBitField,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </QuestionnaireContext.Provider>\r\n  );\r\n};\r\n\r\nexport default QuestionnaireProvider;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useQuestions() {\r\n  // original questions\r\n  const orginalResponses = [\r\n    {\r\n      question: \"Do you experience a mobility impairment?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you experience a colour impairment?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have low vision?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have difficulty reading?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have difficulty operating doors?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do obstacles disrupt your indoor navigation?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have difficulty locating toilets in large buildings?\",\r\n      response: null,\r\n    },\r\n  ];\r\n  // The Questionaire Form is a multi-step form. Users have the option of opting out of any potential\r\n  // changes they make. Therefore we need to maintain two separate state variables for the response that\r\n  // is currently being edited, and the final commited one. Once the user confirms their questionaire response,\r\n  // we copy the contents of editableResponse, to commitedResponse\r\n  const [editableResponse, setEditableResponse] = useState(null);\r\n  const [commitedResponse, setCommitedResponse] = useState(null);\r\n  const LOCAL_STORAGE_KEY = \"cachedResponse\";\r\n\r\n  useEffect(() => {\r\n    // Get Questions From Local Storage\r\n    // If there is no response from local storage, then make the initial response the original questions\r\n    // initialResponse needs to be cloned to avoid the same object being referenced by editableResponse\r\n    // and commitedResponse. They need to be isolated from one another\r\n    const initialResponse = pullResponseLocalStorage() || orginalResponses;\r\n    const clonedIntitialResponseEditable = initialResponse.map((foo) => ({\r\n      ...foo,\r\n    }));\r\n    const clonedIntitialResponseCommited = initialResponse.map((foo) => ({\r\n      ...foo,\r\n    }));\r\n    setEditableResponse(clonedIntitialResponseEditable);\r\n    setCommitedResponse(clonedIntitialResponseCommited);\r\n    return () => {};\r\n  }, []);\r\n\r\n  // Make edits to editableResponse\r\n  const makeEdits = (i, response) => {\r\n    setEditableResponse(\r\n      editableResponse.map((question, j) => {\r\n        if (i == j) {\r\n          question.response = response;\r\n        }\r\n        return question;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Commit any edits made to editableResponse to commitedResponse\r\n  // Clone editableResposne to avoid object sharing between state variables\r\n  const commitEdits = () => {\r\n    const clonedEditableResponse = editableResponse.map((foo) => ({ ...foo }));\r\n    setCommitedResponse(clonedEditableResponse);\r\n    pushResponseLocalStorage(clonedEditableResponse);\r\n  };\r\n\r\n  // Reset any edits made to editableResponse => restore the state of editableResponse\r\n  // to commitedResponse\r\n  const resetEdits = () => {\r\n    const clonedCommitedResponse = commitedResponse.map((foo) => ({ ...foo }));\r\n    setEditableResponse(clonedCommitedResponse);\r\n  };\r\n\r\n  // Pull the cachedResponse from LocalStorage\r\n  const pullResponseLocalStorage = () => {\r\n    if (typeof localStorage !== \"undefined\") {\r\n      try {\r\n        return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    // If Local Storage Unavailable or JSON parsing fails, then return null\r\n    return null;\r\n  };\r\n\r\n  // Push a response to the localStorage unde the LOCAL_STORAGE_KEY\r\n  const pushResponseLocalStorage = (response) => {\r\n    if (typeof localStorage !== \"undefined\") {\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(response));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return {\r\n    editableResponse,\r\n    commitedResponse,\r\n    makeEdits,\r\n    commitEdits,\r\n    resetEdits,\r\n  };\r\n}\r\n","import { useState, useRef, useEffect } from \"react\";\r\n\r\nconst layerClassTranslator = {\r\n  obstacle: {\r\n    fullName: \"Obstacle\",\r\n    gradientKey: \"gradient--obstacle\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/obstacle.svg`,\r\n  },\r\n  tactile: {\r\n    fullName: \"Tactile Flooring\",\r\n    gradientKey: \"gradient--tactile\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/tactile.svg`,\r\n  },\r\n  entry: {\r\n    fullName: \"Accesible Entry\",\r\n    gradientKey: \"gradient--entry\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/entry.svg`,\r\n  },\r\n  stairs: {\r\n    fullName: \"Stairs\",\r\n    gradientKey: \"gradient--stairs\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/stairs.svg`,\r\n  },\r\n  lift: {\r\n    fullName: \"Lift\",\r\n    gradientKey: \"gradient--lift\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/lift.svg`,\r\n  },\r\n  \"support-center\": {\r\n    fullName: \"Support Center\",\r\n    gradientKey: \"gradient--support-center\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/support-center.svg`,\r\n  },\r\n  toilet: {\r\n    fullName: \"Toilet\",\r\n    gradientKey: \"gradient--toilet\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/toilet.svg`,\r\n  },\r\n  \"accessible-toilet\": {\r\n    fullName: \"Accessible Toilet\",\r\n    gradientKey: \"gradient--accessible-toilet\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/accessible-toilet.svg`,\r\n  },\r\n  unlisted: {\r\n    fullName: \"Unlisted\",\r\n    gradientKey: \"gradient--unlisted\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/unlisted.svg`,\r\n  },\r\n  inactive: {\r\n    fullName: \"Point of Interest\",\r\n    gradientKey: \"gradient--inactive\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/poi.svg`,\r\n  },\r\n  passage: {\r\n    fullName: \"Passage\",\r\n    gradientKey: \"gradient--passage\",\r\n    icon: `${process.env.PUBLIC_URL}/icons/passage.svg`,\r\n  },\r\n};\r\n\r\nconst useLayerUtilities = () => {\r\n  const getTranslation = (key) => {\r\n    return layerClassTranslator[key];\r\n  };\r\n\r\n  const getClassKeys = () => {\r\n    return Object.keys(layerClassTranslator);\r\n  };\r\n\r\n  const getLayerClassIterator = (callback) => {\r\n    Object.entries(layerClassTranslator).forEach(([key, value]) => {\r\n      callback(key, value);\r\n    });\r\n  };\r\n\r\n  return {\r\n    getTranslation,\r\n    getClassKeys,\r\n    getLayerClassIterator,\r\n  };\r\n};\r\n\r\nexport default useLayerUtilities;\r\n","import { useState, useRef, useEffect } from \"react\";\r\nimport useLayerUtilities from \"./useLayerUtilities\";\r\n\r\nconst useLayerColors = () => {\r\n  const layerColorIndexMap = useRef(null);\r\n  const originalColorPalette = useRef(null);\r\n  const [layerColors, setLayerColors] = useState(null);\r\n  const [colorPalette, setColorPallete] = useState(null);\r\n  const { getLayerClassIterator, getClassKeys } = useLayerUtilities();\r\n\r\n  useEffect(() => {\r\n    if (colorPalette && layerColorIndexMap.current) {\r\n      setLayerColors(generateLayerColorsFromPalette(colorPalette));\r\n    }\r\n  }, [colorPalette]);\r\n\r\n  // This function will pull the gradient information from the SVG element and then\r\n  // store it in a state JSON object that can be manipulated directly within React\r\n  const pullLayerStylesFromSVG = (svgEl) => {\r\n    const _layerColorIndexMap = {};\r\n    const _colorIndex = [];\r\n\r\n    getLayerClassIterator((key, value) => {\r\n      const gradientKey = value.gradientKey;\r\n      const gradientEl = svgEl.getElementById(gradientKey);\r\n      if (gradientEl) {\r\n        const primaryColorStop = gradientEl.querySelector(\"[offset='0%']\");\r\n        const secondaryColorStop = gradientEl.querySelector(\"[offset='100%']\");\r\n\r\n        const primaryColor = primaryColorStop\r\n          ? primaryColorStop.getAttribute(\"stop-color\")\r\n          : null;\r\n\r\n        const secondaryColor = secondaryColorStop\r\n          ? secondaryColorStop.getAttribute(\"stop-color\")\r\n          : null;\r\n\r\n        _addColorToPaletteAndIndex(\r\n          key,\r\n          \"primary\",\r\n          primaryColor,\r\n          _layerColorIndexMap,\r\n          _colorIndex\r\n        );\r\n        _addColorToPaletteAndIndex(\r\n          key,\r\n          \"secondary\",\r\n          secondaryColor,\r\n          _layerColorIndexMap,\r\n          _colorIndex\r\n        );\r\n      }\r\n    });\r\n\r\n    layerColorIndexMap.current = _layerColorIndexMap;\r\n    originalColorPalette.current = _colorIndex;\r\n    setColorPallete(_colorIndex);\r\n  };\r\n\r\n  // This function will pull the gradient information from the colorPalette object\r\n  const generateLayerColorsFromPalette = (palette) => {\r\n    const _layerColors = {};\r\n    Object.entries(layerColorIndexMap.current).forEach(([key, value]) => {\r\n      if (!(key in _layerColors)) {\r\n        _layerColors[key] = {\r\n          primary: null,\r\n          secondary: null,\r\n        };\r\n      }\r\n\r\n      _layerColors[key].primary = palette[value.primary];\r\n      _layerColors[key].secondary = palette[value.secondary];\r\n    });\r\n    return _layerColors;\r\n  };\r\n\r\n  const resetColorPalette = () => {\r\n    setColorPallete(originalColorPalette.current);\r\n  };\r\n\r\n  const pushLayerStylesToSVG = (svgEl, _layerColors) => {\r\n    getLayerClassIterator((key, value) => {\r\n      const gradientKey = value.gradientKey;\r\n      const gradientEl = svgEl.getElementById(gradientKey);\r\n      if (gradientEl) {\r\n        // const primaryColorStop = gradientEl.querySelector(\"[offset='0%']\");\r\n        // const primaryMidColorStop = gradientEl.querySelector(\"[offset='50%']\");\r\n        // const secondaryColorStop = gradientEl.querySelector(\"[offset='100%']\");\r\n\r\n        const primary = _layerColors[key].primary;\r\n        const secondary = _layerColors[key].secondary;\r\n        // if (primary) {\r\n        //   primaryColorStop.setAttribute(\"stop-color\", primary);\r\n        // }\r\n        // if (secondary) {\r\n        //   secondaryColorStop.setAttribute(\"stop-color\", secondary);\r\n        // }\r\n\r\n        const colorStops = gradientEl.querySelectorAll(\"stop\");\r\n        if (colorStops.length == 2) {\r\n          colorStops[0].setAttribute(\"stop-color\", primary);\r\n          colorStops[1].setAttribute(\"stop-color\", secondary);\r\n        } else if (colorStops.length == 4) {\r\n          colorStops[0].setAttribute(\"stop-color\", primary);\r\n          colorStops[1].setAttribute(\"stop-color\", primary);\r\n          colorStops[2].setAttribute(\"stop-color\", secondary);\r\n          colorStops[3].setAttribute(\"stop-color\", secondary);\r\n        } else {\r\n          throw new Error(\r\n            \"Invalid Number of Color Stops (Should be 2 or 4); Number of Stops Provided \" +\r\n              colorStops.length\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const _addColorToPaletteAndIndex = (\r\n    key,\r\n    colorType,\r\n    color,\r\n    _layerStyle,\r\n    _colorPalette\r\n  ) => {\r\n    // Guard Clauses\r\n    if (!getClassKeys().includes(key)) {\r\n      throw new Error(\"Not a valid key; \" + key);\r\n    }\r\n    if (colorType !== \"primary\" && colorType !== \"secondary\") {\r\n      throw new Error(\"Not a valid colorType; \" + colorType);\r\n    }\r\n\r\n    if (!(key in _layerStyle)) {\r\n      _layerStyle[key] = {};\r\n    }\r\n    if (!(colorType in _layerStyle[key])) {\r\n      _layerStyle[key][colorType] = null;\r\n    }\r\n\r\n    if (color) {\r\n      const colorIndex = _colorPalette.findIndex((foo) => foo === color);\r\n      if (colorIndex > -1) {\r\n        _layerStyle[key][colorType] = colorIndex;\r\n      } else {\r\n        _colorPalette.push(color);\r\n        _layerStyle[key][colorType] = _colorPalette.length - 1;\r\n      }\r\n    }\r\n  };\r\n\r\n  return {\r\n    layerColors,\r\n    setLayerColors,\r\n    colorPalette,\r\n    setColorPallete,\r\n    resetColorPalette,\r\n    pullLayerStylesFromSVG,\r\n    pushLayerStylesToSVG,\r\n  };\r\n};\r\n\r\nexport default useLayerColors;\r\n","import { useState, useMemo } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\n\r\nconst layerFontFamilies = [\"Arial\", \"Atkinson Hyperlegible\", \"OpenDyslexic\"];\r\nconst layerFontWeights = [\"bold\", \"normal\"];\r\n\r\nconst useLayerStyles = () => {\r\n  const [selectedFontFamily, setSelectedFontFamily] = useState(\r\n    layerFontFamilies[0]\r\n  );\r\n  const [selectedFontWeight, setSelectedFontWeight] = useState(\r\n    layerFontWeights[0]\r\n  );\r\n\r\n  return {\r\n    selectedFontFamily,\r\n    setSelectedFontFamily,\r\n    layerFontFamilies,\r\n    selectedFontWeight,\r\n    setSelectedFontWeight,\r\n    layerFontWeights,\r\n  };\r\n};\r\n\r\nexport default useLayerStyles;\r\n","import { createContext, useState, useRef } from \"react\";\r\nimport useLayerColors from \"../hooks/useLayerColors\";\r\nimport useLayerStyles from \"../hooks/useLayerStyles\";\r\n\r\n//create a context, with createContext api\r\nexport const LayerContext = createContext();\r\n\r\nconst LayerProvider = (props) => {\r\n  const [layerInfo, setLayerInfo] = useState({\r\n    label: null,\r\n    description: null,\r\n    class: null,\r\n  });\r\n\r\n  const {\r\n    layerColors,\r\n    setLayerColors,\r\n    colorPalette,\r\n    setColorPallete,\r\n    resetColorPalette,\r\n    pullLayerStylesFromSVG,\r\n    pushLayerStylesToSVG,\r\n  } = useLayerColors();\r\n\r\n  const {\r\n    layerFontFamilies,\r\n    selectedFontFamily,\r\n    setSelectedFontFamily,\r\n    layerFontWeights,\r\n    selectedFontWeight,\r\n    setSelectedFontWeight,\r\n    layerStyleSheet,\r\n  } = useLayerStyles();\r\n  //   const [colorPalette, setColorPalette] = useState([\r\n  //     \"#648FFF\",\r\n  //     \"#785EF0\",\r\n  //     \"#DC267F\",\r\n  //     \"#FE6100\",\r\n  //     \"#FFB000\",\r\n  //   ]);\r\n\r\n  return (\r\n    <LayerContext.Provider\r\n      value={{\r\n        layerInfo,\r\n        setLayerInfo,\r\n        layerColors,\r\n        setLayerColors,\r\n        layerFontWeights,\r\n        selectedFontWeight,\r\n        setSelectedFontWeight,\r\n        colorPalette,\r\n        setColorPallete,\r\n        resetColorPalette,\r\n        pullLayerStylesFromSVG,\r\n        pushLayerStylesToSVG,\r\n        layerFontFamilies,\r\n        selectedFontFamily,\r\n        setSelectedFontFamily,\r\n        layerStyleSheet,\r\n        // colorPalette,\r\n        // setColorPalette,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LayerContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LayerProvider;\r\n","import React from \"react\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\n\r\nconst MapKeyboardEventHandler = ({ mapPanZoom }) => (\r\n  /**\r\n   * Could potentially implement key combinations to move diagnolally\r\n   */\r\n  <>\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+=\"]}\r\n      onKeyEvent={() => mapPanZoom.zoomIn()}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+-\"]}\r\n      onKeyEvent={() => mapPanZoom.zoomOut()}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"r\"]}\r\n      onKeyEvent={() => {\r\n        mapPanZoom.fit();\r\n        mapPanZoom.center();\r\n      }}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+right\"]}\r\n      onKeyEvent={() => mapPanZoom.panBy({ x: -20, y: 0 })}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+left\"]}\r\n      onKeyEvent={() => mapPanZoom.panBy({ x: 20, y: 0 })}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+up\"]}\r\n      onKeyEvent={() => mapPanZoom.panBy({ x: 0, y: 20 })}\r\n    />\r\n    <KeyboardEventHandler\r\n      handleFocusableElements={true}\r\n      //className={classes.map}\r\n      handleKeys={[\"shift+down\"]}\r\n      onKeyEvent={() => mapPanZoom.panBy({ x: 0, y: -20 })}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default MapKeyboardEventHandler;\r\n","import React, {\r\n  useRef,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport \"./Map.scss\";\r\n\r\nimport { MapContext } from \"../../context/MapContext\";\r\nimport { QuestionnaireContext } from \"../../context/QuestionnaireContext\";\r\nimport { LayerContext } from \"../../context/LayerContext\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport MapKeyboardEventHandler from \"../MapKeyboardEventHandler\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nconst svgPanZoom = require(\"svg-pan-zoom\");\r\n\r\nconst Map = ({ className }) => {\r\n  // useRef References\r\n  const svgEl = useRef(null);\r\n  const rootGroupEl = useRef(null);\r\n  const {\r\n    mapPanZoom,\r\n    setMapPanZoom,\r\n    focusRoot,\r\n    svgPath,\r\n    patterns,\r\n    setMapTitle,\r\n  } = useContext(MapContext);\r\n  const { questionnaireBitField } = useContext(QuestionnaireContext);\r\n  const {\r\n    setLayerInfo,\r\n    layerColors,\r\n    pullLayerStylesFromSVG,\r\n    pushLayerStylesToSVG,\r\n    selectedFontWeight,\r\n  } = useContext(LayerContext);\r\n\r\n  useEffect(() => {\r\n    iterateLayers((layer) => {\r\n      updateLayer(questionnaireBitField, layer);\r\n    });\r\n  }, [questionnaireBitField]);\r\n\r\n  useEffect(() => {\r\n    updatePatterns();\r\n  }, [patterns]);\r\n\r\n  useEffect(() => {\r\n    if (svgEl.current && layerColors) {\r\n      pushLayerStylesToSVG(svgEl.current, layerColors);\r\n    }\r\n  }, [layerColors]);\r\n\r\n  // CSS\r\n  const useStyles = makeStyles((theme) => {\r\n    return {\r\n      font: {\r\n        \"& [data-layer-type='txt']\": {\r\n          fontFamily: theme.typography.fontFamily,\r\n          fontWeight: selectedFontWeight,\r\n        },\r\n      },\r\n    };\r\n  });\r\n\r\n  const layerStyleSheet = useStyles();\r\n\r\n  // Layer Iterator\r\n  // Includes a guard clause to prevent iterating through layers if they are not set\r\n  const iterateLayers = (callback) => {\r\n    if (!svgEl.current) {\r\n      return;\r\n    }\r\n    svgEl.current\r\n      .querySelectorAll(\"[data-layer-type='layer']\")\r\n      .forEach((layer) => {\r\n        callback(layer);\r\n      });\r\n  };\r\n\r\n  // Update Patterns\r\n  const updatePatterns = () => {\r\n    if (rootGroupEl.current) {\r\n      rootGroupEl.current.dataset.layerPattern = patterns ? \"1\" : \"0\";\r\n    }\r\n  };\r\n\r\n  // According to W3C draft, the focus event is fired AFTER the previous element has fired the blur event\r\n  // ****** Focus + Blur Fuctions (START) ******\r\n  const onLayerFocus = (e) => {\r\n    const layer = e.target;\r\n    const { layerBitField } = layer.dataset;\r\n    const roomLabelledBy = layer.getAttribute(\"aria-labelledby\");\r\n    const roomDescribedBy = layer.getAttribute(\"aria-describedby\");\r\n    const roomTitle = svgEl.current.getElementById(roomLabelledBy);\r\n    const roomDesc = svgEl.current.getElementById(roomDescribedBy);\r\n\r\n    setLayerInfo({\r\n      label: roomTitle ? roomTitle.textContent : null,\r\n      description: roomDesc ? roomDesc.textContent : null,\r\n      class: layer.classList.length === 1 ? layer.classList[0] : null,\r\n    });\r\n  };\r\n\r\n  const onLayerBlur = (e) => {\r\n    setLayerInfo({\r\n      label: null,\r\n      description: null,\r\n      class: null,\r\n    });\r\n  };\r\n  // ****** Focus + Blur Fuctions (END) ******\r\n  // Placeholder\r\n  const onError = (e) => {};\r\n\r\n  // Placeholder\r\n  const onLoad = (e) => {\r\n    setMapTitle(\r\n      svgEl.current.getElementById(\"svg--title\")\r\n        ? svgEl.current.getElementById(\"svg--title\").textContent\r\n        : \"Untitled\"\r\n    );\r\n    // Initialize SVG Pan Zoom\r\n    // Set a reference to the root group so that we can interact with it to affect global properties\r\n    rootGroupEl.current = svgEl.current.querySelector(\r\n      \"[data-layer-type='root']\"\r\n    );\r\n    const foo = svgPanZoom(svgEl.current, {\r\n      zoomEnabled: true,\r\n      dblClickZoomEnabled: false,\r\n      preventMouseEventsDefault: false,\r\n      // controlIconsEnabled: false,\r\n    });\r\n    foo.zoomAtPoint(1, { x: 447, y: 183 });\r\n    setMapPanZoom(foo);\r\n\r\n    // Pull SVG Color Information\r\n    pullLayerStylesFromSVG(svgEl.current);\r\n    // pushLayerStyles(svgEl.current);\r\n    // Set Layer Event Listeners\r\n    iterateLayers((layer) => {\r\n      layer.addEventListener(\"focus\", onLayerFocus);\r\n      layer.addEventListener(\"blur\", onLayerBlur);\r\n      updateLayer(questionnaireBitField, layer);\r\n    });\r\n\r\n    // Update Global\r\n    updatePatterns();\r\n  };\r\n\r\n  // Tabbing Order\r\n  // Activated Layers -> Neutral Layers -> Inactive Layers\r\n  const updateLayer = (questionnaireBitField, layer) => {\r\n    let { layerBitField, layerState } = layer.dataset;\r\n    layerBitField = parseInt(layerBitField);\r\n    layerState = parseInt(layerState);\r\n\r\n    // Handling .passage edge case\r\n    if (layer.classList.contains(\"passage\")) {\r\n      layer.tabIndex = \"-1\";\r\n      layer.dataset.layerState = \"1\";\r\n      return;\r\n    }\r\n\r\n    if (layerState > -1) {\r\n      // We can dynamically set the tab index to prioritise the tabbing of activated layers\r\n      // A tabbIndex of 1 will be higher on the tabbing priority compared to a tabIndex of 2\r\n      let isActive = false;\r\n      if (layerBitField) {\r\n        isActive = (questionnaireBitField & layerBitField) > 0;\r\n      }\r\n\r\n      layer.tabIndex = isActive ? \"1\" : \"2\";\r\n      layer.dataset.layerState = isActive ? \"1\" : \"0\";\r\n    } else {\r\n      // A tabbIndex of 3 will be lower on the tabbing priority compared to a tabIndex of 2\r\n      layer.tabIndex = \"-1\";\r\n      layer.dataset.layerState = \"-1\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${className} map`}>\r\n      <MapKeyboardEventHandler mapPanZoom={mapPanZoom} />\r\n      <KeyboardEventHandler handleKeys={[\"esc\"]} onKeyEvent={focusRoot}>\r\n        <SVG\r\n          className={`map-svg ${layerStyleSheet.font}`}\r\n          src={svgPath}\r\n          onError={onError}\r\n          onLoad={onLoad}\r\n          innerRef={svgEl}\r\n        />\r\n      </KeyboardEventHandler>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useContext } from \"react\";\r\nimport { MapContext } from \"../context/MapContext\";\r\n\r\nfunction FileUploader({ className }) {\r\n  const { setSvgPath } = useContext(MapContext);\r\n  const changeHandler = (event) => {\r\n    let fileToUpload = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      setSvgPath(event.target.result);\r\n    };\r\n    reader.readAsDataURL(event.target.files[0]);\r\n  };\r\n\r\n  return (\r\n    <input\r\n      className={className}\r\n      type=\"file\"\r\n      name=\"Floor Plan\"\r\n      onChange={changeHandler}\r\n    />\r\n  );\r\n}\r\n\r\nexport default FileUploader;\r\n","import React, { useRef } from \"react\";\r\nimport { useButton } from \"@react-aria/button\";\r\n\r\nfunction Button(props) {\r\n  let ref = useRef();\r\n  let { buttonProps } = useButton(props, ref);\r\n  let { children } = props;\r\n\r\n  return (\r\n    <button {...buttonProps} ref={ref}>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { MapContext } from \"../../context/MapContext\";\r\nimport FileUploader from \"../FileUploader\";\r\nimport \"./Controls.scss\";\r\nimport Button from \"../aria-components/Button\";\r\nimport {\r\n  ArrowUpward,\r\n  Add,\r\n  Remove,\r\n  ArrowBack,\r\n  ArrowDownward,\r\n  ArrowForward,\r\n  RotateLeft,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Controls = ({ className }) => {\r\n  const { mapPanZoom, rootFocus } = useContext(MapContext);\r\n  console.log(rootFocus);\r\n\r\n  return (\r\n    <div className={`${className} controls`}>\r\n      <h1 tabIndex=\"0\" ref={rootFocus}>\r\n        Controls\r\n      </h1>\r\n      {mapPanZoom && (\r\n        <div className=\"controls-buttons\">\r\n          <Button\r\n            // Root Focus Defines What Element We Automatically Tab To When ESC is pressed\r\n            onPress={() => mapPanZoom.panBy({ x: 20, y: 0 })}\r\n            aria-label=\"Pan Map Left\"\r\n          >\r\n            <ArrowBack />\r\n          </Button>\r\n          <Button\r\n            onPress={() => mapPanZoom.panBy({ x: 0, y: 20 })}\r\n            aria-label=\"Pan Map Up\"\r\n          >\r\n            <ArrowUpward />\r\n          </Button>\r\n          <Button\r\n            onPress={() => mapPanZoom.panBy({ x: 0, y: -20 })}\r\n            aria-label=\"Pan Map Down\"\r\n          >\r\n            <ArrowDownward />\r\n          </Button>\r\n          <Button\r\n            onPress={() => mapPanZoom.panBy({ x: -20, y: 0 })}\r\n            aria-label=\"Pan Map Right\"\r\n          >\r\n            <ArrowForward />\r\n          </Button>\r\n          <Button\r\n            onPress={() => mapPanZoom.zoomIn()}\r\n            aria-label=\"Zoom In on Map\"\r\n          >\r\n            <Add />\r\n          </Button>\r\n          <Button\r\n            onPress={() => mapPanZoom.zoomOut()}\r\n            aria-label=\"Zoom Out on Map\"\r\n          >\r\n            <Remove />\r\n          </Button>\r\n          <Button\r\n            onPress={() => {\r\n              mapPanZoom.fit();\r\n              mapPanZoom.center();\r\n            }}\r\n            aria-label=\"Restore Map Zoom\"\r\n          >\r\n            <RotateLeft />\r\n          </Button>\r\n        </div>\r\n      )}\r\n      <h1 class=\"u-margin-left-auto u-margin-right-md\">Change Floor Plan</h1>\r\n      <FileUploader className={\"controls-file-uploader\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport \"./DualColorLabel.scss\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nexport const DualColorLabel = ({ children, left, right, className }) => {\r\n  // left => Left Left\r\n  // right => Right Edge\r\n  const edgeWidth = \"1rem\";\r\n  const useStyles = makeStyles((theme) => ({\r\n    label: {\r\n      borderLeft: `${edgeWidth} solid ${left}`,\r\n      borderRight: `${edgeWidth} solid ${right}`,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span tabIndex=\"0\" class={`${classes.label} dual-color-label ${className}`}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n","import React, { useContext, useState, useMemo, useCallback } from \"react\";\r\nimport \"./RoomInformation.scss\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport { LayerContext } from \"../../context/LayerContext\";\r\nimport { DualColorLabel } from \"../color/DualColorLabel\";\r\nimport useLayerUtilities from \"../../hooks/useLayerUtilities\";\r\n\r\nconst RoomInformation = ({ className }) => {\r\n  const { layerInfo, layerColors } = useContext(LayerContext);\r\n  const { getTranslation } = useLayerUtilities();\r\n  const [iconColor, setIconColor] = useState(\"blue\");\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    icon: {\r\n      color: iconColor,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={`${className} room-information`}>\r\n      <div className={`room-information-meta-data`}>\r\n        <h3 className={\"room-information-header\"}>Name </h3>\r\n        <span className={\"room-information-text\"}>\r\n          {layerInfo.label || \"Nothing Selected\"}\r\n        </span>\r\n        <h3 className={\"room-information-header\"}>Description </h3>\r\n        <span className={\"room-information-text\"}>\r\n          {layerInfo.description || \"Nothing Selected\"}\r\n        </span>\r\n      </div>\r\n      {layerInfo.class && (\r\n        <div className={`room-information-icon`}>\r\n          <SVG src={getTranslation(layerInfo.class).icon} />\r\n          <DualColorLabel\r\n            left={layerColors[layerInfo.class].primary}\r\n            right={layerColors[layerInfo.class].secondary}\r\n          >\r\n            {getTranslation(layerInfo.class).fullName}\r\n          </DualColorLabel>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomInformation;\r\n","import React, { useContext, useRef, useEffect } from \"react\";\r\nimport { LayerContext } from \"../../../context/LayerContext\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\n\r\n// Change Per Second Limiter (cps)\r\n// Limits the number of color changes that can be made per second. Prevents\r\n// overloading the React Update Queue with too many color change requests\r\nconst _cpsLimiter = 45;\r\n// Calculates the length of the change window to facilitate the cps, in milliseconds\r\nconst cpsLimiterMs = (1 / _cpsLimiter) * 1000;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: { fontFamily: theme.fontFamily },\r\n}));\r\n\r\nconst OptionColors = () => {\r\n  const classes = useStyles();\r\n  const { colorPalette, setColorPallete, resetColorPalette } =\r\n    useContext(LayerContext);\r\n  const colorChangeTimeout = useRef(null);\r\n\r\n  const onChange = (e, i) => {\r\n    if (!colorChangeTimeout.current) {\r\n      colorChangeTimeout.current = setTimeout(() => {\r\n        colorChangeTimeout.current = null;\r\n      }, cpsLimiterMs);\r\n\r\n      setColorPallete((foo) => {\r\n        return foo.map((bar, j) => {\r\n          if (i == j) {\r\n            return e.target.value;\r\n          } else {\r\n            return bar;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (colorChangeTimeout.current) {\r\n        clearTimeout(colorChangeTimeout.current);\r\n        colorChangeTimeout.current = null;\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {colorPalette && (\r\n        <>\r\n          {colorPalette.map((color, i) => (\r\n            <label className=\"input-group\" key={`color-options-${i}`}>\r\n              <span className={`u-margin-right-auto ${classes}`}>\r\n                Color #{i}\r\n              </span>\r\n              <input\r\n                type=\"color\"\r\n                value={color}\r\n                onChange={(e) => {\r\n                  onChange(e, i);\r\n                }}\r\n              ></input>\r\n            </label>\r\n          ))}\r\n          <Button variant=\"contained\" onClick={resetColorPalette}>\r\n            Reset Colors\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionColors;\r\n","import React, { useContext } from \"react\";\r\nimport { DualColorLabel } from \"../../color/DualColorLabel\";\r\nimport \"./OptionLegend.scss\";\r\nimport { LayerContext } from \"../../../context/LayerContext\";\r\nimport useLayerUtilities from \"../../../hooks/useLayerUtilities\";\r\n\r\nexport const OptionLegend = () => {\r\n  const { layerColors } = useContext(LayerContext);\r\n  const { getTranslation } = useLayerUtilities();\r\n\r\n  return (\r\n    <div class=\"option-legend\">\r\n      {layerColors &&\r\n        Object.keys(layerColors).map((key, i) => (\r\n          <DualColorLabel\r\n            className=\"option-legend-label-margin\"\r\n            left={layerColors[key].primary}\r\n            right={layerColors[key].secondary}\r\n          >\r\n            {getTranslation(key).fullName}\r\n          </DualColorLabel>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\r\nimport { useToggleState } from \"@react-stately/toggle\";\r\nimport { useFocusRing } from \"@react-aria/focus\";\r\nimport { useSwitch } from \"@react-aria/switch\";\r\n\r\nfunction Switch(props) {\r\n  let state = useToggleState(props);\r\n  let ref = React.useRef();\r\n  let { inputProps } = useSwitch(props, state, ref);\r\n  let { isFocusVisible, focusProps } = useFocusRing();\r\n\r\n  return (\r\n    <>\r\n      <VisuallyHidden>\r\n        <input {...inputProps} {...focusProps} ref={ref} />\r\n      </VisuallyHidden>\r\n      <svg width={40} height={24} aria-hidden=\"true\" style={{ marginRight: 4 }}>\r\n        <rect\r\n          x={4}\r\n          y={4}\r\n          width={32}\r\n          height={16}\r\n          rx={8}\r\n          fill={state.isSelected ? \"orange\" : \"gray\"}\r\n        />\r\n        <circle cx={state.isSelected ? 28 : 12} cy={12} r={5} fill=\"white\" />\r\n        {isFocusVisible && (\r\n          <rect\r\n            x={1}\r\n            y={1}\r\n            width={38}\r\n            height={22}\r\n            rx={11}\r\n            fill=\"none\"\r\n            stroke=\"orange\"\r\n            strokeWidth={2}\r\n          />\r\n        )}\r\n      </svg>\r\n      {props.children}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n","import React, { useContext } from \"react\";\r\nimport Switch from \"../../aria-components/Switch\";\r\nimport { MapContext } from \"../../../context/MapContext\";\r\nimport \"./OptionPattern.scss\";\r\n\r\nconst OptionPattern = () => {\r\n  const { patterns, setPatterns } = useContext(MapContext);\r\n  return (\r\n    <div className=\"options-pattern\">\r\n      <label className=\"input-group\">\r\n        <span className=\"u-margin-right-auto\">Turn On Patterns</span>\r\n        <Switch\r\n          onChange={() => {\r\n            setPatterns((foo) => !foo);\r\n          }}\r\n          isSelected={patterns}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionPattern;\r\n","import React, { useContext } from \"react\";\r\nimport { LayerContext } from \"../../../context/LayerContext\";\r\nimport \"./OptionFonts.scss\";\r\n\r\nconst OptionFonts = () => {\r\n  const {\r\n    layerFontFamilies,\r\n    selectedFontFamily,\r\n    setSelectedFontFamily,\r\n    layerFontWeights,\r\n    selectedFontWeight,\r\n    setSelectedFontWeight,\r\n  } = useContext(LayerContext);\r\n\r\n  const onFontFamilyChange = (e) => {\r\n    setSelectedFontFamily(e.target.value);\r\n  };\r\n\r\n  const onFontWeightChange = (e) => {\r\n    setSelectedFontWeight(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div class=\"option-fonts\">\r\n      <label className=\"input-group\">\r\n        <span className=\"u-margin-right-auto\">Font Family</span>\r\n        <select name=\"font\" onChange={onFontFamilyChange}>\r\n          {layerFontFamilies.map((font) => (\r\n            <option\r\n              value={font}\r\n              selected={font === selectedFontFamily}\r\n              key={`fonts-${font}`}\r\n            >\r\n              {font}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n      <label className=\"input-group\">\r\n        <span className=\"u-margin-right-auto\">Font Weight</span>\r\n        <select name=\"font\" onChange={onFontWeightChange}>\r\n          {layerFontWeights.map((weight) => (\r\n            <option\r\n              value={weight}\r\n              selected={weight === selectedFontWeight}\r\n              key={`weight-${weight}`}\r\n            >\r\n              {weight}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OptionFonts;\r\n","import React, { useContext } from \"react\";\r\nimport OptionColors from \"./colors/OptionColors\";\r\nimport { OptionLegend } from \"./legend/OptionLegend\";\r\nimport \"./Options.scss\";\r\nimport OptionPattern from \"./patterns/OptionPattern\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport OptionFonts from \"./fonts/OptionFonts\";\r\n\r\nconst Options = ({ className }) => {\r\n  return (\r\n    <div className={`${className} options`}>\r\n      <div className=\"u-padding-bottom-xs\">\r\n        <h1 className=\"u-margin-top-0 u-text-align-center\">Legend</h1>\r\n        <OptionLegend />\r\n      </div>\r\n      <Divider />\r\n      <div className=\"u-margin-top-sm\">\r\n        <h1 className=\"u-margin-top-0 u-text-align-center\">Fonts</h1>\r\n        <OptionFonts />\r\n      </div>\r\n      <Divider />\r\n      <div className=\"u-margin-top-sm\">\r\n        <h1 className=\"u-margin-top-0 u-text-align-center\">Options</h1>\r\n        <OptionPattern />\r\n      </div>\r\n      <Divider />\r\n      <div className=\"u-margin-top-sm\">\r\n        <h1 className=\"u-margin-top-0 u-text-align-center\">Colors</h1>\r\n        <OptionColors />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Options;\r\n","import React from \"react\";\r\nimport { useRadioGroupState } from \"@react-stately/radio\";\r\nimport { useRadioGroup, useRadio } from \"@react-aria/radio\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Divider } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  questionRow: {\r\n    display: \"flex\",\r\n    fontSize: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 5,\r\n    paddingRight: 5,\r\n  },\r\n  question: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nlet RadioContext = React.createContext(null);\r\n\r\nfunction RadioGroup(props) {\r\n  let { children, label } = props;\r\n  const classes = useStyles();\r\n\r\n  let state = useRadioGroupState(props);\r\n  let { radioGroupProps, labelProps } = useRadioGroup(props, state);\r\n\r\n  return (\r\n    <div {...radioGroupProps} className={classes.questionRow}>\r\n      <span {...labelProps}>{label}</span>\r\n      <div className={classes.question}>\r\n        <RadioContext.Provider value={state}>{children}</RadioContext.Provider>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Radio(props) {\r\n  let { children } = props;\r\n  let state = React.useContext(RadioContext);\r\n  let ref = React.useRef(null);\r\n  let { inputProps } = useRadio(props, state, ref);\r\n\r\n  return (\r\n    <label style={{ display: \"block\" }}>\r\n      <input {...inputProps} ref={ref} />\r\n      {children}\r\n    </label>\r\n  );\r\n}\r\n\r\nfunction Questions({ response, makeEdits }) {\r\n  const onRadioChange = (value, i) => {\r\n    makeEdits(i, value);\r\n  };\r\n\r\n  return response.map((response, i) => (\r\n    <>\r\n      <RadioGroup\r\n        key={i}\r\n        value={response.response}\r\n        label={response.question}\r\n        onChange={(value) => onRadioChange(value, i)}\r\n      >\r\n        <Radio value=\"yes\">Yes</Radio>\r\n        <Radio value=\"no\">No</Radio>\r\n      </RadioGroup>\r\n      <Divider />\r\n    </>\r\n  ));\r\n}\r\n\r\nexport default Questions;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { Card, CardContent, CardHeader } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { QuestionnaireContext } from \"../context/QuestionnaireContext\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Questions from \"./Questions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  button: {\r\n    backgroundColor: \"black\",\r\n    color: \"white\",\r\n    marginTop: 2.5,\r\n    marginBottom: 2.5,\r\n  },\r\n  card: {\r\n    backgroundColor: \"whitesmoke\",\r\n    width: \"75%\",\r\n    alignSelf: \"center\",\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Questionnaire() {\r\n  const { editableResponse, makeEdits, commitEdits, resetEdits } =\r\n    useContext(QuestionnaireContext);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetEdits();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // updatingBinary\r\n    commitEdits();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <KeyboardEventHandler\r\n        handleFocusableElements={true}\r\n        //className={classes.map}\r\n        handleKeys={[\"q\"]}\r\n        onKeyEvent={handleClickOpen}\r\n      />\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"black\"\r\n        onClick={handleClickOpen}\r\n        fullWidth={true}\r\n      >\r\n        Open User Profile\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Map User Profile\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSave}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Card sx={{ width: 275 }} className={classes.card}>\r\n          <CardHeader title=\"Answer the following questions\" />\r\n          <CardContent>\r\n            {editableResponse && (\r\n              <Questions response={editableResponse} makeEdits={makeEdits} />\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import {\r\n  useTable,\r\n  useTableCell,\r\n  useTableColumnHeader,\r\n  useTableRow,\r\n  useTableHeaderRow,\r\n  useTableRowGroup,\r\n  useTableSelectAllCheckbox,\r\n  useTableSelectionCheckbox,\r\n} from \"@react-aria/table\";\r\nimport { useTableState } from \"@react-stately/table\";\r\nimport { mergeProps } from \"@react-aria/utils\";\r\nimport { useRef } from \"react\";\r\nimport { useFocusRing } from \"@react-aria/focus\";\r\nimport { useToggleState } from \"@react-stately/toggle\";\r\nimport { useCheckbox } from \"@react-aria/checkbox\";\r\nimport { VisuallyHidden } from \"@react-aria/visually-hidden\";\r\n\r\nfunction Table(props) {\r\n  let state = useTableState({\r\n    ...props,\r\n    showSelectionCheckboxes: props.selectionMode === \"multiple\",\r\n  });\r\n  let ref = useRef();\r\n  let { collection } = state;\r\n  let { gridProps } = useTable(props, state, ref);\r\n\r\n  return (\r\n    <table {...gridProps} ref={ref} style={{ borderCollapse: \"collapse\" }}>\r\n      <TableRowGroup\r\n        type=\"thead\"\r\n        style={{\r\n          borderBottom: \"2px solid var(--spectrum-global-color-gray-800)\",\r\n        }}\r\n      >\r\n        {collection.headerRows.map((headerRow) => (\r\n          <TableHeaderRow key={headerRow.key} item={headerRow} state={state}>\r\n            {[...headerRow.childNodes].map((column) =>\r\n              column.props.isSelectionCell ? (\r\n                <TableSelectAllCell\r\n                  key={column.key}\r\n                  column={column}\r\n                  state={state}\r\n                />\r\n              ) : (\r\n                <TableColumnHeader\r\n                  key={column.key}\r\n                  column={column}\r\n                  state={state}\r\n                />\r\n              )\r\n            )}\r\n          </TableHeaderRow>\r\n        ))}\r\n      </TableRowGroup>\r\n      <TableRowGroup type=\"tbody\">\r\n        {[...collection.body.childNodes].map((row) => (\r\n          <TableRow key={row.key} item={row} state={state}>\r\n            {[...row.childNodes].map((cell) =>\r\n              cell.props.isSelectionCell ? (\r\n                <TableCheckboxCell key={cell.key} cell={cell} state={state} />\r\n              ) : (\r\n                <TableCell key={cell.key} cell={cell} state={state} />\r\n              )\r\n            )}\r\n          </TableRow>\r\n        ))}\r\n      </TableRowGroup>\r\n    </table>\r\n  );\r\n}\r\n\r\nfunction TableRowGroup({ type: Element, style, children }) {\r\n  let { rowGroupProps } = useTableRowGroup();\r\n  return (\r\n    <Element {...rowGroupProps} style={style}>\r\n      {children}\r\n    </Element>\r\n  );\r\n}\r\n\r\nfunction TableHeaderRow({ item, state, children }) {\r\n  let ref = useRef();\r\n  let { rowProps } = useTableHeaderRow({ node: item }, state, ref);\r\n\r\n  return (\r\n    <tr {...rowProps} ref={ref}>\r\n      {children}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TableColumnHeader({ column, state }) {\r\n  let ref = useRef();\r\n  let { columnHeaderProps } = useTableColumnHeader(\r\n    { node: column },\r\n    state,\r\n    ref\r\n  );\r\n  let { isFocusVisible, focusProps } = useFocusRing();\r\n  let arrowIcon = state.sortDescriptor?.direction === \"ascending\" ? \"▲\" : \"▼\";\r\n\r\n  return (\r\n    <th\r\n      {...mergeProps(columnHeaderProps, focusProps)}\r\n      colSpan={column.colspan}\r\n      style={{\r\n        textAlign: column.colspan > 1 ? \"center\" : \"left\",\r\n        padding: \"5px 10px\",\r\n        outline: isFocusVisible ? \"2px solid orange\" : \"none\",\r\n        cursor: \"default\",\r\n      }}\r\n      ref={ref}\r\n    >\r\n      {column.rendered}\r\n      {column.props.allowsSorting && (\r\n        <span\r\n          aria-hidden=\"true\"\r\n          style={{\r\n            padding: \"0 2px\",\r\n            visibility:\r\n              state.sortDescriptor?.column === column.key\r\n                ? \"visible\"\r\n                : \"hidden\",\r\n          }}\r\n        >\r\n          {arrowIcon}\r\n        </span>\r\n      )}\r\n    </th>\r\n  );\r\n}\r\n\r\nfunction TableRow({ item, children, state }) {\r\n  let ref = useRef();\r\n  let isSelected = state.selectionManager.isSelected(item.key);\r\n  let { rowProps } = useTableRow({ node: item }, state, ref);\r\n  let { isFocusVisible, focusProps } = useFocusRing();\r\n\r\n  return (\r\n    <tr\r\n      style={{\r\n        background: isSelected\r\n          ? \"blueviolet\"\r\n          : item.index % 2\r\n          ? \"var(--spectrum-alias-highlight-hover)\"\r\n          : \"none\",\r\n        color: isSelected ? \"white\" : null,\r\n        outline: isFocusVisible ? \"2px solid orange\" : \"none\",\r\n      }}\r\n      {...mergeProps(rowProps, focusProps)}\r\n      ref={ref}\r\n    >\r\n      {children}\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TableCell({ cell, state }) {\r\n  let ref = useRef();\r\n  let { gridCellProps } = useTableCell({ node: cell }, state, ref);\r\n  let { isFocusVisible, focusProps } = useFocusRing();\r\n\r\n  return (\r\n    <td\r\n      {...mergeProps(gridCellProps, focusProps)}\r\n      style={{\r\n        padding: \"5px 10px\",\r\n        outline: isFocusVisible ? \"2px solid orange\" : \"none\",\r\n        cursor: \"default\",\r\n      }}\r\n      ref={ref}\r\n    >\r\n      {cell.rendered}\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction TableCheckboxCell({ cell, state }) {\r\n  let ref = useRef();\r\n  let { gridCellProps } = useTableCell({ node: cell }, state, ref);\r\n  let { checkboxProps } = useTableSelectionCheckbox(\r\n    { key: cell.parentKey },\r\n    state\r\n  );\r\n\r\n  let inputRef = useRef(null);\r\n  let { inputProps } = useCheckbox(\r\n    checkboxProps,\r\n    useToggleState(checkboxProps),\r\n    inputRef\r\n  );\r\n\r\n  return (\r\n    <td {...gridCellProps} ref={ref}>\r\n      <input {...inputProps} />\r\n    </td>\r\n  );\r\n}\r\n\r\nfunction TableSelectAllCell({ column, state }) {\r\n  let ref = useRef();\r\n  let isSingleSelectionMode = state.selectionManager.selectionMode === \"single\";\r\n  let { columnHeaderProps } = useTableColumnHeader(\r\n    { node: column },\r\n    state,\r\n    ref\r\n  );\r\n\r\n  let { checkboxProps } = useTableSelectAllCheckbox(state);\r\n  let inputRef = useRef(null);\r\n  let { inputProps } = useCheckbox(\r\n    checkboxProps,\r\n    useToggleState(checkboxProps),\r\n    inputRef\r\n  );\r\n\r\n  return (\r\n    <th {...columnHeaderProps} ref={ref}>\r\n      {state.selectionManager.selectionMode === \"single\" ? (\r\n        <VisuallyHidden>{inputProps[\"aria-label\"]}</VisuallyHidden>\r\n      ) : (\r\n        <input {...inputProps} ref={inputRef} />\r\n      )}\r\n    </th>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { QuestionnaireContext } from \"../context/QuestionnaireContext\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Table from \"./aria-components/table/Table\";\r\nimport {\r\n  Cell,\r\n  Column,\r\n  Row,\r\n  TableBody,\r\n  TableHeader,\r\n} from \"@react-stately/table\";\r\nimport { Card, CardContent, CardHeader } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    fontSize: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 200,\r\n    paddingRight: 200,\r\n  },\r\n  questionRow: {\r\n    display: \"flex\",\r\n    fontSize: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  question: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    color: \"black\",\r\n    marginTop: 2.5,\r\n    marginBottom: 2.5,\r\n  },\r\n  card: {\r\n    backgroundColor: \"whitesmoke\",\r\n    //width: \"75%\",\r\n    alignSelf: \"center\",\r\n    //height: \"100%\",\r\n    padding: 50,\r\n  },\r\n  cardContent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n\r\nconst Key = ({ children }) => (\r\n  <div\r\n    style={{\r\n      backgroundColor: \"white\",\r\n      boxShadow: \"0 1px 1px\",\r\n      borderRadius: 3,\r\n      minWidth: 30,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      padding: 4,\r\n      marginLeft: 8,\r\n      marginRight: 8,\r\n    }}\r\n  >\r\n    {children}\r\n  </div>\r\n);\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function KeyboardShortcuts() {\r\n  const { editableResponse, makeEdits, commitEdits, resetEdits } =\r\n    useContext(QuestionnaireContext);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const shortcuts = [\r\n    {\r\n      category: \"Map Controls\",\r\n      keys: [\"shift\", \"arrow\"],\r\n      description: \"Pan Map in that direction\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"shift\", \"+\"],\r\n      description: \"Zoom in on map\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"shift\", \"-\"],\r\n      description: \"Zoom out on map\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"R\"],\r\n      description: \"Reset Zoom on map\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"esc\"],\r\n      description: \"Exit Map focus and return to controls menu\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [],\r\n      description: \"\",\r\n    },\r\n    {\r\n      category: \"Dialog Control\",\r\n      keys: [\"Q\"],\r\n      description: \"Open the questionnaire dialog\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"K\"],\r\n      description: \"Open the keyboard keys dialog\",\r\n    },\r\n    {\r\n      category: \"\",\r\n      keys: [\"esc\"],\r\n      description: \"Close dialog menu\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <KeyboardEventHandler\r\n        handleFocusableElements={true}\r\n        //className={classes.map}\r\n        handleKeys={[\"k\"]}\r\n        onKeyEvent={handleClickOpen}\r\n      />\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"black\"\r\n        onClick={handleClickOpen}\r\n        className={classes.button}\r\n        fullWidth={true}\r\n      >\r\n        Open Keyboard Shortcuts\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Keyboard Shortcuts\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Card sx={{ width: 275 }} className={classes.card}>\r\n          <CardContent className={classes.cardContent}>\r\n            <Table\r\n              aria-label=\"Keyboard Shortcuts for the Tool\"\r\n              style={{ height: \"500px\", width: \"100%\" }}\r\n            >\r\n              <TableHeader>\r\n                <Column>Category</Column>\r\n                <Column>Shortcut</Column>\r\n                <Column>Description</Column>\r\n              </TableHeader>\r\n              <TableBody>\r\n                {shortcuts.map(({ category, keys, description }) => (\r\n                  <Row>\r\n                    <Cell>{category}</Cell>\r\n                    <Cell>\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          flexDirection: \"row\",\r\n                          justifyContent: \"center\",\r\n                        }}\r\n                      >\r\n                        {keys.map((shortcut, i) => (\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              flexDirection: \"row\",\r\n                              alignItems: \"center\",\r\n                            }}\r\n                          >\r\n                            <Key>{shortcut}</Key>\r\n                            {i + 1 != keys.length && \" + \"}\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </Cell>\r\n                    <Cell aria-hidden={category == \"\"}>{description}</Cell>\r\n                  </Row>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n        {/* <div className={classes.header}>\r\n            <span>Key</span>\r\n            <span>Description</span>\r\n          </div>\r\n          {shortcuts.map(({ key, description }, i) => (\r\n            <React.Fragment key={i}>\r\n              <div className={classes.questionRow}>\r\n                <span>{key}</span>\r\n                <span>{description}</span>\r\n              </div>\r\n              <Divider />\r\n            </React.Fragment>\r\n          ))} */}\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Shortcuts.scss\";\r\nimport Questionnaire from \"../Questionnaire\";\r\nimport KeyboardShortcuts from \"../KeyboardShortcuts\";\r\n\r\nconst Shortcuts = ({ className }) => {\r\n  return (\r\n    <div className={`${className} shortcuts`}>\r\n      <Questionnaire />\r\n      <KeyboardShortcuts />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Shortcuts;\r\n","import React, { useContext } from \"react\";\r\nimport { MapContext } from \"../../context/MapContext\";\r\nimport \"./Title.scss\";\r\n\r\nexport const Title = ({ className }) => {\r\n  const { mapTitle } = useContext(MapContext);\r\n  return (\r\n    <div className={`${className} title`}>\r\n      <h1>{mapTitle}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { useContext } from \"react\";\r\nimport \"./Dashboard.scss\";\r\n\r\nimport Map from \"./components/map/Map\";\r\nimport Controls from \"./components/controls/Controls\";\r\nimport RoomInformation from \"./components/room-information/RoomInformation\";\r\nimport Options from \"./components/options/Options\";\r\nimport Shortcuts from \"./components/shortcuts/Shortcuts\";\r\nimport Title from \"./components/title/Title\";\r\nimport { LayerContext } from \"./context/LayerContext\";\r\nimport { MuiThemeProvider, createTheme } from \"@material-ui/core/styles\";\r\n\r\nconst Dashboard = () => {\r\n  const { selectedFontFamily } = useContext(LayerContext);\r\n  const THEME = createTheme({\r\n    typography: {\r\n      fontFamily: selectedFontFamily,\r\n      fontSize: 14,\r\n      fontWeightLight: 300,\r\n      fontWeightRegular: 400,\r\n      fontWeightMedium: 500,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <MuiThemeProvider theme={THEME}>\r\n      <div className=\"dashboard\" style={{ fontFamily: selectedFontFamily }}>\r\n        <Title className=\"dashboard-title\"></Title>\r\n        <Map className=\"dashboard-map\"></Map>\r\n        <Controls className=\"dashboard-controls\"></Controls>\r\n        <RoomInformation className=\"dashboard-description\"></RoomInformation>\r\n        <Shortcuts className=\"dashboard-shortcuts\"></Shortcuts>\r\n        <Options className=\"dashboard-options\"></Options>\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.scss\";\r\nimport MapProvider from \"./context/MapContext\";\r\nimport QuestionnaireProvider from \"./context/QuestionnaireContext\";\r\nimport LayerProvider from \"./context/LayerContext\";\r\n\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nfunction App() {\r\n  return (\r\n    <MapProvider>\r\n      <QuestionnaireProvider>\r\n        <LayerProvider>\r\n          <Dashboard />\r\n        </LayerProvider>\r\n      </QuestionnaireProvider>\r\n    </MapProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}