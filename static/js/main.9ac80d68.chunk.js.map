{"version":3,"sources":["logo.svg","context/MapContext.js","context/QuestionnaireContext.js","hooks/useQuestions.js","components/Map.js","components/Questionnaire.js","components/FileUploader.js","components/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["MapContext","createContext","MapProvider","props","useState","mapPanZoom","setMapPanZoom","process","svgPath","setSvgPath","roomLabel","setRoomLabel","roomDescription","setRoomDescription","roomFlag","setRoomFlag","rootFocus","useRef","Provider","value","focusRoot","current","focus","children","QuestionnaireContext","QuestionnaireProvider","orginalResponses","question","response","editableResponse","setEditableResponse","commitedResponse","setCommitedResponse","LOCAL_STORAGE_KEY","useEffect","initialResponse","pullResponseLocalStorage","clonedIntitialResponseEditable","map","foo","clonedIntitialResponseCommited","localStorage","JSON","parse","getItem","err","console","error","pushResponseLocalStorage","setItem","stringify","makeEdits","i","j","commitEdits","clonedEditableResponse","resetEdits","clonedCommitedResponse","useQuestions","bitFlag","setBitflag","log","acm","counter","length","getBitFlag","svgPanZoom","require","Map","svgEl","useContext","iterateLayers","updateLayer","layer","dataset","layerFlag","layerState","tabIndex","parseInt","useStyles","makeStyles","theme","flex","margin","border","svg","height","width","callback","querySelectorAll","forEach","onLayerFocus","e","target","roomLabelledBy","getAttribute","roomDescribedBy","getElementById","textContent","onLayerBlur","classes","className","handleKeys","onKeyEvent","src","onError","onLoad","zoomEnabled","dblClickZoomEnabled","preventMouseEventsDefault","zoomAtPoint","x","y","addEventListener","innerRef","appBar","position","title","marginLeft","spacing","RadioButtonsGroup","onChange","index","FormControl","component","RadioGroup","name","row","FormControlLabel","control","Radio","label","Transition","React","forwardRef","ref","Slide","direction","Questionnaire","open","setOpen","handleClickOpen","handleClose","handleFocusableElements","Button","variant","color","onClick","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","Typography","autoFocus","List","Fragment","ListItem","onKeyUp","onKeyPress","ListItemText","primary","Divider","FileUploader","type","event","files","reader","FileReader","onload","result","readAsDataURL","attributes","display","flexDirection","backgroundColor","attribute","stroke","strokeWidth","buttons","justify","Controls","zoomIn","zoomOut","resetZoom","root","minHeight","App","flexBoxClasses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document"],"mappings":"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","file":"static/js/main.9ac80d68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext, useState, useRef } from \"react\";\r\n\r\n//create a context, with createContext api\r\nexport const MapContext = createContext();\r\n\r\nconst MapProvider = (props) => {\r\n  // this state will be shared with all components\r\n  const [mapPanZoom, setMapPanZoom] = useState();\r\n  const [svgPath, setSvgPath] = useState(\r\n    `${process.env.PUBLIC_URL}/svg/focus-test.svg`\r\n  );\r\n  const [roomLabel, setRoomLabel] = useState();\r\n  const [roomDescription, setRoomDescription] = useState();\r\n  const [roomFlag, setRoomFlag] = useState();\r\n  const rootFocus = useRef(null);\r\n\r\n  const focusRoot = () => {\r\n    if (rootFocus.current) {\r\n      rootFocus.current.focus();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MapContext.Provider\r\n      value={{\r\n        mapPanZoom,\r\n        setMapPanZoom,\r\n        rootFocus,\r\n        focusRoot,\r\n        roomLabel,\r\n        setRoomLabel,\r\n        roomDescription,\r\n        setRoomDescription,\r\n        roomFlag,\r\n        setRoomFlag,\r\n        svgPath,\r\n        setSvgPath,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MapContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MapProvider;\r\n","import { createContext, useState, useEffect } from \"react\";\r\nimport useQuestions from \"../hooks/useQuestions\";\r\n\r\n//create a context, with createContext api\r\nexport const QuestionnaireContext = createContext();\r\n\r\nconst QuestionnaireProvider = (props) => {\r\n  const {\r\n    editableResponse,\r\n    commitedResponse,\r\n    makeEdits,\r\n    commitEdits,\r\n    resetEdits,\r\n  } = useQuestions();\r\n  const [bitFlag, setBitflag] = useState(0);\r\n\r\n  const getBitFlag = (response) => {\r\n    if (response) {\r\n      // acm => Accumulator\r\n      let acm = 0;\r\n      // Binary number would be {question 7 response}{question 6 response}...{question 1 response}\r\n      // 000000001 & 10000000 = 0 = 0\r\n      // 1101 & 1000000101 = 0101 = 5\r\n      // 13 & 69 = 5\r\n      let counter = 0;\r\n      while (counter < response.length) {\r\n        let responseNumber = response[counter].response == \"yes\" ? 1 : 0;\r\n        acm += responseNumber * 2 ** counter;\r\n        counter++;\r\n      }\r\n      return acm;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", commitedResponse);\r\n    setBitflag(commitedResponse ? getBitFlag(commitedResponse) : 0);\r\n  }, [commitedResponse]);\r\n\r\n  return (\r\n    <QuestionnaireContext.Provider\r\n      value={{\r\n        editableResponse,\r\n        commitedResponse,\r\n        makeEdits,\r\n        commitEdits,\r\n        resetEdits,\r\n        bitFlag,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </QuestionnaireContext.Provider>\r\n  );\r\n};\r\n\r\nexport default QuestionnaireProvider;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useQuestions() {\r\n  // original questions\r\n  const orginalResponses = [\r\n    {\r\n      question: \"Do you experience a motor impairment?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you experience a colour impairment?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have low vision?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you experience total blindness?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have difficulty reading?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do you have difficulties operating doors?\",\r\n      response: null,\r\n    },\r\n    {\r\n      question: \"Do obstacles disrupt your indoor navigation?\",\r\n      response: null,\r\n    },\r\n  ];\r\n  // The Questionaire Form is a multi-step form. Users have the option of opting out of any potential\r\n  // changes they make. Therefore we need to maintain two separate state variables for the response that\r\n  // is currently being edited, and the final commited one. Once the user confirms their questionaire response,\r\n  // we copy the contents of editableResponse, to commitedResponse\r\n  const [editableResponse, setEditableResponse] = useState(null);\r\n  const [commitedResponse, setCommitedResponse] = useState(null);\r\n  const LOCAL_STORAGE_KEY = \"cachedResponse\";\r\n\r\n  useEffect(() => {\r\n    // Get Questions From Local Storage\r\n    // If there is no response from local storage, then make the initial response the original questions\r\n    // initialResponse needs to be cloned to avoid the same object being referenced by editableResponse\r\n    // and commitedResponse. They need to be isolated from one another\r\n    const initialResponse = pullResponseLocalStorage() || orginalResponses;\r\n    const clonedIntitialResponseEditable = initialResponse.map((foo) => ({\r\n      ...foo,\r\n    }));\r\n    const clonedIntitialResponseCommited = initialResponse.map((foo) => ({\r\n      ...foo,\r\n    }));\r\n    setEditableResponse(clonedIntitialResponseEditable);\r\n    setCommitedResponse(clonedIntitialResponseCommited);\r\n    return () => {};\r\n  }, []);\r\n\r\n  // Make edits to editableResponse\r\n  const makeEdits = (i, response) => {\r\n    setEditableResponse(\r\n      editableResponse.map((question, j) => {\r\n        if (i == j) {\r\n          question.response = response;\r\n        }\r\n        return question;\r\n      })\r\n    );\r\n  };\r\n\r\n  // Commit any edits made to editableResponse to commitedResponse\r\n  // Clone editableResposne to avoid object sharing between state variables\r\n  const commitEdits = () => {\r\n    const clonedEditableResponse = editableResponse.map((foo) => ({ ...foo }));\r\n    setCommitedResponse(clonedEditableResponse);\r\n    pushResponseLocalStorage(clonedEditableResponse);\r\n  };\r\n\r\n  // Reset any edits made to editableResponse => restore the state of editableResponse\r\n  // to commitedResponse\r\n  const resetEdits = () => {\r\n    const clonedCommitedResponse = commitedResponse.map((foo) => ({ ...foo }));\r\n    setEditableResponse(clonedCommitedResponse);\r\n  };\r\n\r\n  // Pull the cachedResponse from LocalStorage\r\n  const pullResponseLocalStorage = () => {\r\n    if (typeof localStorage !== \"undefined\") {\r\n      try {\r\n        return JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    }\r\n    // If Local Storage Unavailable or JSON parsing fails, then return null\r\n    return null;\r\n  };\r\n\r\n  // Push a response to the localStorage unde the LOCAL_STORAGE_KEY\r\n  const pushResponseLocalStorage = (response) => {\r\n    if (typeof localStorage !== \"undefined\") {\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(response));\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return {\r\n    editableResponse,\r\n    commitedResponse,\r\n    makeEdits,\r\n    commitEdits,\r\n    resetEdits,\r\n  };\r\n}\r\n","import { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useRef, useContext, useEffect } from \"react\";\r\nimport { MapContext } from \"../context/MapContext\";\r\nimport { QuestionnaireContext } from \"../context/QuestionnaireContext\";\r\nimport SVG from \"react-inlinesvg\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nconst svgPanZoom = require(\"svg-pan-zoom\");\r\n\r\nfunction Map() {\r\n  // useRef References\r\n  const svgEl = useRef(null);\r\n  const {\r\n    mapPanZoom,\r\n    setMapPanZoom,\r\n    focusRoot,\r\n    setRoomLabel,\r\n    setRoomDescription,\r\n    setRoomFlag,\r\n    svgPath,\r\n  } = useContext(MapContext);\r\n  const { bitFlag } = useContext(QuestionnaireContext);\r\n\r\n  useEffect(() => {\r\n    iterateLayers(updateLayer);\r\n  }, [bitFlag]);\r\n\r\n  // Tabbing Order\r\n  // Activated Layers -> Neutral Layers -> Inactive Layers\r\n  const updateLayer = (layer) => {\r\n    const { layerFlag, layerState } = layer.dataset;\r\n    if (layerState > -1) {\r\n      // We can dynamically set the tab index to prioritise the tabbing of activated layers\r\n      // A tabbIndex of 1 will be higher on the tabbing priority compared to a tabIndex of 2\r\n      layer.tabIndex = (bitFlag & parseInt(layerFlag)) > 0 ? \"1\" : \"2\";\r\n      layer.dataset.layerState =\r\n        (bitFlag & parseInt(layerFlag)) > 0 ? \"1\" : \"0\";\r\n    } else {\r\n      // A tabbIndex of 3 will be lower on the tabbing priority compared to a tabIndex of 2\r\n      layer.tabIndex = \"3\";\r\n      layer.dataset.layerState = \"-1\";\r\n    }\r\n  };\r\n\r\n  // CSS\r\n  const useStyles = makeStyles((theme) => ({\r\n    map: {\r\n      flex: 3,\r\n      margin: 10,\r\n      border: \"8px black\",\r\n    },\r\n    svg: {\r\n      height: \"100%\",\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n  // Placeholder\r\n  const onError = (e) => {};\r\n\r\n  // Placeholder\r\n  const onLoad = (e) => {\r\n    // Initialize SVG Pan Zoom\r\n    const foo = svgPanZoom(svgEl.current, {\r\n      zoomEnabled: true,\r\n      dblClickZoomEnabled: false,\r\n      preventMouseEventsDefault: false,\r\n      // controlIconsEnabled: false,\r\n    });\r\n    foo.zoomAtPoint(1, { x: 447, y: 183 });\r\n    setMapPanZoom(foo);\r\n\r\n    iterateLayers((layer) => {\r\n      layer.addEventListener(\"focus\", onLayerFocus);\r\n      layer.addEventListener(\"blur\", onLayerBlur);\r\n      updateLayer(layer);\r\n    });\r\n  };\r\n\r\n  const iterateLayers = (callback) => {\r\n    if (!svgEl.current) {\r\n      return;\r\n    }\r\n    svgEl.current.querySelectorAll(\"[data-layer='root']\").forEach((layer) => {\r\n      callback(layer);\r\n    });\r\n  };\r\n\r\n  // According to W3C draft, the focus event is fired AFTER the previous element has fired the blur event\r\n  // ****** Focus + Blur Fuctions (START) ******\r\n  const onLayerFocus = (e) => {\r\n    const layer = e.target;\r\n    const { layerFlag } = layer.dataset;\r\n    const roomLabelledBy = layer.getAttribute(\"aria-labelledby\");\r\n    const roomDescribedBy = layer.getAttribute(\"aria-describedby\");\r\n    const roomLabel = svgEl.current.getElementById(roomLabelledBy).textContent;\r\n    const roomDescription =\r\n      svgEl.current.getElementById(roomDescribedBy).textContent;\r\n    setRoomLabel(roomLabel);\r\n    setRoomDescription(roomDescription);\r\n    setRoomFlag(layerFlag);\r\n  };\r\n\r\n  const onLayerBlur = (e) => {\r\n    setRoomLabel(null);\r\n    setRoomDescription(null);\r\n    setRoomFlag(null);\r\n  };\r\n  // ****** Focus + Blur Fuctions (END) ******\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <KeyboardEventHandler\r\n      className={classes.map}\r\n      handleKeys={[\"esc\"]}\r\n      onKeyEvent={focusRoot}\r\n    >\r\n      <SVG\r\n        className={classes.svg}\r\n        src={svgPath}\r\n        onError={onError}\r\n        onLoad={onLoad}\r\n        innerRef={svgEl}\r\n      />\r\n    </KeyboardEventHandler>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport { FormLabel } from \"@material-ui/core\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport { MapContext } from \"../context/MapContext\";\r\nimport useQuestions from \"../hooks/useQuestions\";\r\nimport { QuestionnaireContext } from \"../context/QuestionnaireContext\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));  \r\nconst RadioButtonsGroup = ({ onChange, value, index}) => {\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      {/* <FormLabel component=\"legend\">Response</FormLabel> */}\r\n      <RadioGroup\r\n        aria-label=\"gender\"\r\n        name={\"gender\"+index}\r\n        value={value}\r\n        onChange={onChange}\r\n        row\r\n      >\r\n        <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n        <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Questionnaire() {\r\n  const { editableResponse, makeEdits, commitEdits, resetEdits } =\r\n    useContext(QuestionnaireContext);\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetEdits();\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // updatingBinary\r\n    commitEdits();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <KeyboardEventHandler\r\n        handleFocusableElements={true}\r\n        className={classes.map}\r\n        handleKeys={[\"q\"]}\r\n        onKeyEvent={handleClickOpen}\r\n      />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open Questionnaire\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Map Questionnaire\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleSave}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          {editableResponse &&\r\n            editableResponse.map((question, i) => (\r\n              <React.Fragment key={i}>\r\n                <ListItem\r\n                  onKeyUp={(e) => console.log(e, \"eventUp\")}\r\n                  onKeyPress={(e) => console.log(e, \"eventDown\")}\r\n                >\r\n                  <ListItemText primary={question.question} />\r\n                  <RadioButtonsGroup\r\n                    onChange={(e) => {\r\n                      makeEdits(i, e.target.value);\r\n                    }}\r\n                    value={question.response}\r\n                    index={i}\r\n                  />\r\n                </ListItem>\r\n                <Divider />\r\n              </React.Fragment>\r\n            ))}\r\n        </List>\r\n      {/* <FormControl component=\"fieldset\">\r\n        <FormLabel component=\"legend\">Gender</FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"gender\"\r\n          defaultValue=\"female\"\r\n          name=\"radio-buttons-group--age\"\r\n        >\r\n          <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n          <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n          <FormControlLabel value=\"other\" control={<Radio />} label=\"Other\" />\r\n        </RadioGroup>\r\n        <FormLabel component=\"legend\">Age</FormLabel>\r\n        <RadioGroup\r\n          aria-label=\"age\"\r\n          defaultValue=\"10\"\r\n          name=\"radio-buttons-group--age\"\r\n        >\r\n          <FormControlLabel value=\"10\" control={<Radio />} label=\"10\" />\r\n          <FormControlLabel value=\"20\" control={<Radio />} label=\"20\" />\r\n        </RadioGroup>\r\n      </FormControl> */}\r\n        \r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nfunction FileUploader({ setSvgPath }) {\r\n  const changeHandler = (event) => {\r\n    let fileToUpload = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      setSvgPath(event.target.result);\r\n    };\r\n    reader.readAsDataURL(event.target.files[0]);\r\n  };\r\n\r\n  return <input type=\"file\" name=\"file\" onChange={changeHandler} />;\r\n}\r\n\r\nexport default FileUploader;\r\n","import React, { useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Questionnaire from \"./Questionnaire\";\r\nimport { MapContext } from \"../context/MapContext\";\r\nimport { QuestionnaireContext } from \"../context/QuestionnaireContext\";\r\nimport FileUploader from \"./FileUploader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  attributes: {\r\n    flex: 1,\r\n    margin: 10,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"whitesmoke\",\r\n  },\r\n  attribute: { flex: 4, margin: 10, stroke: \"black\", strokeWidth: 5 },\r\n  buttons: {\r\n    flex: 1,\r\n    margin: 10,\r\n    display: \"flex\",\r\n    justify: \"space-between\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction Controls() {\r\n  const classes = useStyles();\r\n  const {\r\n    mapPanZoom,\r\n    setMapPanZoom,\r\n    rootFocus,\r\n    roomLabel,\r\n    roomDescription,\r\n    roomFlag,\r\n    setSvgPath,\r\n  } = useContext(MapContext);\r\n  const { commitedResponse, bitFlag } = useContext(QuestionnaireContext);\r\n\r\n  return (\r\n    <div className={classes.attributes}>\r\n      <div className={classes.attribute}>\r\n        <label ref={rootFocus}>\r\n          <p>Questionnaire</p>\r\n          <Questionnaire />\r\n        </label>\r\n        <label>\r\n          <p>Change SVG</p>\r\n          <FileUploader setSvgPath={setSvgPath} />\r\n        </label>\r\n      </div>\r\n      <div className={classes.attribute}>\r\n        <h1>Bit Stuffing</h1>\r\n        <h2>{bitFlag}</h2>\r\n      </div>\r\n      <div className={classes.attribute}>\r\n        <h1>Selected Room</h1>\r\n        <h3>Name: {roomLabel ? roomLabel : \"No Room Selected\"}</h3>\r\n        <h3>Description: {roomDescription && roomDescription}</h3>\r\n        <h3>Room Flag: {roomFlag && roomFlag}</h3>\r\n      </div>\r\n      <div className={classes.buttons}>\r\n        {mapPanZoom && (\r\n          <>\r\n            <label>\r\n              Zoom In\r\n              <button onClick={() => mapPanZoom.zoomIn()}>+</button>\r\n            </label>\r\n            <label>\r\n              Zoom Out\r\n              <button onClick={() => mapPanZoom.zoomOut()}>-</button>\r\n            </label>\r\n            <label>\r\n              Reset\r\n              <button onClick={() => mapPanZoom.resetZoom()}>x</button>\r\n            </label>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React, { useRef, useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Map from \"./components/Map\";\r\nimport Controls from \"./components/Controls\";\r\nimport MapProvider from \"./context/MapContext\";\r\nimport QuestionnaireProvider from \"./context/QuestionnaireContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"90vh\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const flexBoxClasses = useStyles();\r\n\r\n  return (\r\n    <MapProvider>\r\n      <QuestionnaireProvider>\r\n        <div className={flexBoxClasses.root}>\r\n          <Map />\r\n          <Controls />\r\n        </div>\r\n      </QuestionnaireProvider>\r\n    </MapProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}