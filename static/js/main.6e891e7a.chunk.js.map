{"version":3,"sources":["logo.svg","context/MapContext.js","components/Map.js","components/Questionnaire.js","components/Controls.js","App.js","reportWebVitals.js","index.js"],"names":["MapContext","createContext","MapProvider","props","useState","mapPanZoom","setMapPanZoom","rootFocus","useRef","Provider","value","focusRoot","current","focus","children","svgPanZoom","require","Map","svgEl","useContext","classes","makeStyles","theme","map","flex","backgroundColor","margin","svg","height","width","useStyles","className","handleKeys","onKeyEvent","src","process","onError","e","onLoad","foo","zoomEnabled","dblClickZoomEnabled","zoomAtPoint","x","y","innerRef","appBar","position","title","marginLeft","spacing","Transition","React","forwardRef","ref","Slide","direction","Questionnaire","open","setOpen","handleClose","Button","variant","color","onClick","Dialog","fullScreen","onClose","TransitionComponent","AppBar","Toolbar","IconButton","edge","Typography","autoFocus","List","ListItem","button","ListItemText","primary","secondary","Divider","attributes","display","flexDirection","attribute","buttons","justify","Controls","zoomIn","zoomOut","resetZoom","root","minHeight","App","flexBoxClasses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e891e7a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createContext, useState, useRef } from 'react';\r\n\r\n//create a context, with createContext api\r\nexport const MapContext = createContext();\r\n\r\nconst MapProvider = (props) => {\r\n    // this state will be shared with all components \r\n    const [mapPanZoom, setMapPanZoom] = useState();\r\n    const rootFocus = useRef(null);\r\n\r\n    const focusRoot = () => {\r\n        if (rootFocus.current) {\r\n            rootFocus.current.focus()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <MapContext.Provider value={{mapPanZoom, setMapPanZoom, rootFocus, focusRoot}}>\r\n            {props.children}\r\n        </MapContext.Provider>\r\n    );\r\n};\r\n\r\nexport default MapProvider;\r\n","import { makeStyles } from '@material-ui/styles';\r\nimport React, {useRef, useContext} from 'react';\r\nimport {MapContext} from '../context/MapContext'\r\nimport SVG from 'react-inlinesvg';\r\nimport KeyboardEventHandler from 'react-keyboard-event-handler';\r\nconst svgPanZoom = require('svg-pan-zoom')\r\n\r\n\r\nfunction Map() {\r\n    // useRef References\r\n    const svgEl = useRef(null);\r\n    const {mapPanZoom, setMapPanZoom, focusRoot} = useContext(MapContext)\r\n    // CSS\r\n    const useStyles = makeStyles((theme)=>({\r\n        map: { flex: 3, backgroundColor: \"blue\", margin: 10 },\r\n        svg: {\r\n            height: \"100%\",\r\n            width: \"100%\"\r\n        }\r\n    }))\r\n\r\n    // Placeholder\r\n    const onError = (e) => {\r\n\r\n    }\r\n\r\n\r\n    // Placeholder\r\n    const onLoad = (e) => {\r\n        const foo = svgPanZoom(svgEl.current, {\r\n            zoomEnabled: true,\r\n            dblClickZoomEnabled: false\r\n            // controlIconsEnabled: false,\r\n         }\r\n        )\r\n        foo.zoomAtPoint(1, {x: 447, y: 183})\r\n        setMapPanZoom(foo)\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <KeyboardEventHandler\r\n        className={classes.map}\r\n        handleKeys={['esc']}\r\n        onKeyEvent={focusRoot} >\r\n                <SVG \r\n                    className={classes.svg}\r\n                    src={`${process.env.PUBLIC_URL}/svg/focus-test.svg`} \r\n                    onError={onError}\r\n                    onLoad={onLoad}\r\n                    innerRef={svgEl}\r\n                />\r\n        </KeyboardEventHandler>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Questionnaire() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText primary=\"Default notification ringtone\" secondary=\"Tethys\" />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, {useContext} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Questionnaire from './Questionnaire';\r\nimport {MapContext} from '../context/MapContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    attributes: {\r\n        flex: 1,\r\n        backgroundColor: \"green\",\r\n        margin: 10,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      },\r\n    attribute: { flex: 4, backgroundColor: \"white\", margin: 10 },\r\n    buttons: { flex: 1, backgroundColor: \"white\", margin: 10, display:\"flex\", justify:\"space-between\", flexDirection:\"row\" },\r\n  }));\r\n\r\nfunction Controls() {\r\n    const classes = useStyles();\r\n    const {mapPanZoom, setMapPanZoom, rootFocus} = useContext(MapContext)\r\n\r\n    return (\r\n        <div className={classes.attributes}>\r\n            <div className={classes.attribute}>\r\n                <label ref={rootFocus}>\r\n                    Questionaire\r\n                    <Questionnaire/>\r\n                </label>\r\n\r\n            </div>\r\n            <div className={classes.attribute}>\r\n                <h1>Hey</h1>\r\n            </div>\r\n            <div className={classes.attribute}>\r\n                <h1>Hey</h1>\r\n            </div>\r\n            <div className={classes.buttons}>\r\n            {\r\n                mapPanZoom &&\r\n                <>\r\n                    <label>\r\n                        Zoom In\r\n                        <button onClick={() => mapPanZoom.zoomIn()}>+</button>\r\n                    </label>\r\n                    <label>\r\n                        Zoom Out\r\n                        <button onClick={() => mapPanZoom.zoomOut()}>-</button>\r\n                    </label>\r\n                    <label>\r\n                        Reset\r\n                        <button onClick={() => mapPanZoom.resetZoom()}>x</button>\r\n                    </label>\r\n                </>\r\n\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls\r\n","import React, {useRef, useState} from 'react'\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Map from './components/Map';\r\nimport Controls from './components/Controls'\r\nimport MapProvider from './context/MapContext';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: \"90vh\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    backgroundColor: \"red\",\r\n    flexDirection: \"row\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const flexBoxClasses = useStyles()\r\n\r\n  return (\r\n      <MapProvider>\r\n        <div className={flexBoxClasses.root}>\r\n          <Map />\r\n          <Controls/>\r\n        </div>\r\n      </MapProvider>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}